{% extends "base.stencil" %}

{% if type == "create" %}
    {% block title %}{{ block.super }} - Organiseer een spel{% endblock %}
{% else %}
    {% block title %}{{ block.super }} - Spel aanpassen{% endblock %}
{% endif %}

{% block additional-head %}
<link rel="stylesheet" href="/public/css/pikaday.min.css">
<style>
#map {
    height: 400px;
}
</style>
{% endblock %}

{% block content %}
{% if type == "create" %}
    <h2>Organiseer een spel</h2>
    <p>Vul het onderstaande formulier in om je spel aan te maken.</p>
    <form method="post" action="/web/host-game">
{% else %}
    <h2>Spel aanpassen</h2>
    <form method="post" action="/web/game/{{ id }}/edit">
        <input name="type" type="hidden" value="{{ type }}">
{% endif %}
{% if type == "create" %}
    <h3>Spel</h3>
    <input name="game" type="hidden" value="{{ game }}">
    <div class="form-group">
        <label>Naam</label>
        {% if nameOptions|count > 1 %}
            <select class="form-control custom-select" name="name">
                {% for name in nameOptions %}
                    <option value="{{ name }}">{{ name }}</option>
                {% endfor %}
            </select>
        {% else %}
            <input class="form-control" name="name" type="text" value="{{ nameOptions|first }}" readonly>
        {% endif %}
    </div>
{% endif %}
{% if type == "create" or type == "edit-players" %}
    <!-- For "edit-players", the correct default values will be set in code. -->
    <div class="form-group">
        <label>Aantal spelers</label>
        {% if playerCountOptions|count > 1 %}
            <select id="playerCount" class="form-control custom-select" name="playerCount">
                {% for playerCount in playerCountOptions %}
                    {% if playerCount == playerCountOptions|max %}
                        <option value="{{ playerCount }}" selected>{{ playerCount }}</option>
                    {% else %}
                        <option value="{{ playerCount }}">{{ playerCount }}</option>
                    {% endif %}
                {% endfor %}
            </select>
        {% else %}
            <input class="form-control" name="playerCount" type="text" value="{{ playerCountOptions|first }}" readonly>
        {% endif %}
        <p class="form-text text-muted">
            Dit is het totaal aantal spelers, organisatoren meegerekend.
        </p>
    </div>
    <div class="form-group">
        <label>Minimum aantal spelers</label>
        {% if playerCountOptions|count > 1 %}
            <select id="minPlayerCount" class="form-control custom-select" name="minPlayerCount">
                {% for playerCount in playerCountOptions %}
                    <option value="{{ playerCount }}">{{ playerCount }}</option>
                {% endfor %}
            </select>
        {% else %}
            <input class="form-control" name="minPlayerCount" type="text" value="{{ playerCountOptions|first }}" readonly>
        {% endif %}        
        <p class="form-text text-muted">
            Het minimum aantal spelers dat nodig is om het spel te laten doorgaan.
        </p>
    </div>
    <div class="form-group">
        <label>Aantal plaatsen te reserveren voor organisatoren</label>
        {% if prereservedSeatsOptions|count > 1 %}
            <select id="prereservedSeats" class="form-control custom-select" name="prereservedSeats">
                {% for seatCount in prereservedSeatsOptions %}
                    {% if seatCount == 0 %}
                        <option value="{{ seatCount }}">Geen (ik neem niet deel)</option>
                    {% elif seatCount == 1 %}
                        <option value="{{ seatCount }}" selected>{{ seatCount }}</option>
                    {% else %}
                        <option value="{{ seatCount }}">{{ seatCount }}</option>
                    {% endif %}
                {% endfor %}
            </select>
            <p class="form-text text-muted">
                Dit aantal wordt afgetrokken van het totaal aantal spelers bij het berekenen van het aantal vrije plaatsen.
            </p>
        {% else %}
            <input class="form-control" type="text" value="Geen (ik neem niet deel)" readonly>
            <input name="prereservedSeats" type="hidden" value="0">
        {% endif %}
    </div>
{% endif %}
{% if type == "create" %}
    <h3>Datum en tijdstip</h3>
{% endif %}
{% if type == "create" or type == "edit-datetime" %}
    <div class="form-row">
        <div class="form-group col-md-6">
            <label>Datum</label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text">
                        <i class="fa fa-calendar"></i> 
                    </span>
                </div>
                <!-- The date picker's default value will be set in code. -->
                <input id="datepicker" class="form-control" type="text" readonly required>
            </div>
            <input id="day" name="day" type="hidden" value="{{ date.day }}">
            <input id="month" name="month" type="hidden" value="{{ date.month }}">
            <input id="year" name="year" type="hidden" value="{{ date.year }}">
        </div>
        <div class="form-group col-md-3">
            <label>Uur</label>
            <input class="form-control" name="hour" type="number" value="{{ date.hour }}" min="0" max="23" required>
        </div>
        <div class="form-group col-md-3">
            <label>Minuut</label>
            <input class="form-control" name="minute" type="number" value="{{ date.minute }}" min="0" max="59" required>
        </div>
    </div>
{% endif %}
{% if type == "create" or type == "edit-deadline" %}
    <div class="form-group">
        <label>Deadline voor inschrijving</label>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="deadlineType" value="one hour" checked>
            <label class="form-check-label">een uur op voorhand</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="deadlineType" value="one day">
            <label class="form-check-label">een dag op voorhand</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="deadlineType" value="two days">
            <label class="form-check-label">twee dagen op voorhand</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="deadlineType" value="one week">
            <label class="form-check-label">een week op voorhand</label>
        </div>
        <p class="form-text text-muted">
            Na het verstrijken van de deadline kan je als organisator nog steeds aanvragen goedkeuren of het spel annuleren.
        </p>
    </div>
{% endif %}
{% if type == "create" %}
    <h3>Adres</h3>
{% endif %}
{% if type == "create" or type == "edit-address" %}
    <!-- The correct default values will be set in code. -->
    <input id="address" name="address" type="hidden">
    <input id="city" name="city" type="hidden">
    <input id="country" name="country" type="hidden">
    <input id="latitude" name="latitude" type="hidden">
    <input id="longitude" name="longitude" type="hidden">
    <p>
        Deze adresgegevens worden getoond aan de spelers wiens aanvraag jij hebt goedkeurd.
    </p>
    {% if base.user.location %}
        <div class="form-group">
            <div class="form-check">
                <input id="use-saved-location" class="form-check-input" type="checkbox" checked>
                <label class="form-check-label">
                    Gebruik mijn opgeslagen adres: {{ base.user.location.address }}.
                </label>
            </div>
        </div>
    {% endif %}
    <div id="address-picker" class="form-group">
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">
                    <i class="fa fa-map-marker"></i> 
                </span>
            </div>
            <input id="autocomplete" class="form-control" type="text" placeholder="Adres">
        </div>
        <p class="form-text text-muted">
            Maak gebruik van de automatische aanvulling en kies een adres uit de voorgestelde opties.
            Er zal een aanduiding verschijnen op de kaart wanneer je adres correct is ingegeven.
        </p>
        <div id="map"></div>
    </div>
{% endif %}
{% if type == "create" %}
    <h3>Extra informatie</h3>
{% endif %}
{% if type == "create" or type == "edit-info" %}
    <div class="form-group">
        <textarea class="form-control" name="info" rows="8">{{ info }}</textarea>
    </div>
{% endif %}
    <div class="form-group">
        <!-- The submit button will be disabled when the user needs to enter an address. -->
        <button id="submit" class="btn btn-primary" type="submit">
            {% if type == "create" %}
                Spel aanmaken
            {% else %}
                Aanpassingen opslaan
            {% endif %}
        </button>
    </div>
</form>
{% endblock %}

{% block additional-body %}
<script src="/public/js/pikaday.min.js"></script>
<script>
{% if type == "create" or type == "edit-datetime" %}
    // Set up the date picker.
    var picker = new Pikaday({
        field: document.getElementById("datepicker"),
        firstDay: 1,
        minDate: new Date(),
        defaultDate: new Date({{ date.year }}, {{ date.month }} - 1, {{ date.day }}),
        setDefaultDate: true,
        toString(date, format) {
            return date.toLocaleDateString("nl", { weekday: "long", year: "numeric", month: "long", day: "numeric" });
        },
        onSelect: function(date) {
            $("#day").val(date.getDate());
            $("#month").val(date.getMonth() + 1);
            $("#year").val(date.getFullYear());
        },
        i18n: {
            previousMonth : "Vorige maand",
            nextMonth     : "Volgende maand",
            months        : ["Januari","Februari","Maart","April","Mei","Juni","Juli","Augustus","September","Oktober","November","December"],
            weekdays      : ["Zondag","Maandag","Dinsdag","Woensdag","Donderdag","Vrijdag","Zaterdag"],
            weekdaysShort : ["Zon","Ma","Di","Woe","Do","Vrij","Zat"]
        }
    });
{% endif %}
{% if type == "create" or type == "edit-players" %}
    // Adjusts minPlayerCount and prereservedSeats when a new playerCount is selected.
    function checkPlayerCounts() {
        var playerCount = parseInt($("#playerCount").val());
        var minPlayerCount = parseInt($("#minPlayerCount").val());
        // If minPlayerCount is now invalid, set it to the new playerCount.
        if (minPlayerCount > playerCount) {
            $("#minPlayerCount").val(playerCount);
        }
        // Adjust the minPlayerCount options based on the new playerCount.
        $("#minPlayerCount option").each(function() {
            var option = parseInt($(this).attr("value"));
            if (option <= playerCount) {
                $(this).removeAttr("disabled");
            } else {
                $(this).attr("disabled", "disabled");
            }
        });
        // If prereservedSeats is now invalid, set it to the highest valid option.
        var prereservedSeats = parseInt($("#prereservedSeats").val());
        if (prereservedSeats >= playerCount) {
            $("#prereservedSeats").val(playerCount - 1);
        }
        // Adjust the prereservedSeats options based on the new playerCount.
        $("#prereservedSeats option").each(function() {
            var option = parseInt($(this).attr("value"));
            if (option < playerCount) {
                $(this).removeAttr("disabled");
            } else {
                $(this).attr("disabled", "disabled");
            }
        });
    }
    $("#playerCount").on("change", checkPlayerCounts);
{% endif %}
{% if type == "edit-players" %}
    // Set the correct default values when editing a game.
    $("#playerCount").val("{{ playerCount }}");
    $("#minPlayerCount").val("{{ minPlayerCount }}");
    $("#prereservedSeats").val("{{ prereservedSeats }}");
    checkPlayerCounts();
{% endif %}
{% if type == "create" or type == "edit-address" %}
    $("#submit").attr("disabled", "disabled");
    // Set up the map.
    var map;
    function loadMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            center: {
                lat: {{ base.coordinates.latitude }},
                lng: {{ base.coordinates.longitude }}
            },
            zoom: 15
        });
    }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key={{ base.google.key }}&libraries=places&callback=loadMap"></script>
    <script>
    // Set up the autocomplete address field.
    var autocomplete = new google.maps.places.Autocomplete(document.getElementById("autocomplete"), {
        componentRestrictions: {
            country: {{ base.google.countries }}
        }
    });
    // Adjust the map and set a marker when the user enters an address.
    var marker;
    autocomplete.addListener("place_changed", function() {
        var place = autocomplete.getPlace();
        var cityComponent = place.address_components.find(function(component) {
            return component.types.indexOf("locality") != -1;
        });
        var countryComponent = place.address_components.find(function(component) {
            return component.types.indexOf("country") != -1;
        });
        // Make sure the location has both a city and a country.
        if (!cityComponent || !countryComponent) {
            clearLocation();
            $("#submit").attr("disabled", "disabled");
            return
        }
        $("#address").val($("#autocomplete").val());
        var city = cityComponent.long_name;
        var country = countryComponent.short_name;
        var coordinates = place.geometry.location;
        $("#city").val(city);
        $("#country").val(country);
        $("#latitude").val(coordinates.lat);
        $("#longitude").val(coordinates.lng);
        if (!marker) {
            marker = new google.maps.Marker({
                position: coordinates,
                map: map
            });
        } else {
            marker.setPosition(coordinates);
        }
        map.setCenter(coordinates);
        $("#submit").removeAttr("disabled");
    });
    {% if base.user.location %}
        function setSavedLocation() {
            $("#autocomplete").val("{{ base.user.location.address }}");
            $("#address").val("{{ base.user.location.address }}");
            $("#city").val("{{ base.user.location.city }}");
            $("#country").val("{{ base.user.location.country }}");
            $("#latitude").val("{{ base.user.location.coordinates.latitude }}");
            $("#longitude").val("{{ base.user.location.coordinates.longitude }}");
            var coordinates = {
                lat: {{ base.user.location.coordinates.latitude }},
                lng: {{ base.user.location.coordinates.longitude }}
            };
            if (!marker) {
                marker = new google.maps.Marker({
                    position: coordinates,
                    map: map
                });
            } else {
                marker.setPosition(coordinates);
            }
            map.setCenter(coordinates);
        }
        // Toggle the address picker.
        $("#use-saved-location").on("change", function() {
            if (!this.checked) {
                clearLocation();
                $("#address-picker").show();
                // These next two statements make sure the map renders properly.
                // The map won't render properly when the address picker is hidden.
                google.maps.event.trigger(map, "resize");
                map.setCenter({
                    lat: {{ base.user.location.coordinates.latitude }},
                    lng: {{ base.user.location.coordinates.longitude }}
                });
                $("#submit").attr("disabled", "disabled");
            } else {
                setSavedLocation();
                $("#address-picker").hide();
                $("#submit").removeAttr("disabled");
            }
        });
        setSavedLocation();
        $("#address-picker").hide();
        $("#submit").removeAttr("disabled");
    {% endif %}
    function clearLocation() {
        $("#autocomplete").val("");
        $("#address").val("");
        $("#city").val("");
        $("#country").val("");
        $("#latitude").val("");
        $("#longitude").val("");
        if (marker) {
            marker.setMap(null);
            marker = null;
        }
    }
{% endif %}
</script>
{% endblock %}
