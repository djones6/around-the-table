{% extends "nl_BE/base.stencil" %}

{% block title %}{{ block.super }} - Instellingen{% endblock %}
{% block additional-head %}
<style>
#map {
    height: 400px;
}
</style>
{% endblock %}

{% block content %}
{% if saved %}
    <div id="saved" class="alert alert-success">
        <button type="button" class="close">&times;</button>
        De wijzigingen zijn correct opgeslagen.
    </div>
{% endif %}
<h2>Instellingen</h2>
<p>
    <img class="avatar rounded-circle mr-2" src="{{ global.user.picture }}">
    {{ global.user.name }}
</p>
<p class="text-muted">
    Je gebruikersnaam en profielfoto worden opgehaald bij Facebook tijdens het aanmelden.
</p>
<form method="post" action="/web/settings">
    <h3>Adres</h3>
    <input id="address" name="address" type="hidden">
    <input id="city" name="city" type="hidden">
    <input id="latitude" name="latitude" type="hidden">
    <input id="longitude" name="longitude" type="hidden">
    <div class="form-group">
        <label>
            Om afstanden te kunnen berekenen dien je hier je adres in te geven.
            Bij het organiseren van spellen hoef je dit dan niet meer te doen.
        </label>
        <div class="input-group">
            <i class="input-group-addon fa fa-map-marker"></i>
            <input id="autocomplete" class="form-control" type="text" placeholder="Adres">
            <span class="input-group-btn">
                <button id="clear" class="btn btn-danger" type="button"><i class="fa fa-times"></i></button>
            </span>
        </div>
        <p class="form-text text-muted">
            Maak gebruik van de automatische aanvulling en kies een adres uit de voorgestelde opties.
            Er zal een aanduiding verschijnen op de kaart wanneer je adres correct is ingegeven.
        </p>
        <div id="map"></div>
    </div>
    <div class="form-group">
        <button id="submit" class="btn btn-primary" type="submit">Opslaan</button>
    </div>
</form>
{% endblock %}

{% block additional-body %}
<script>
// Set up the close button for the save confirmation.
$("#saved button.close").on("click", function() {
    $("#saved").hide();
});
// Set up the map.
var map;
function loadMap() {
    map = new google.maps.Map(document.getElementById("map"), {
        center: {
            lat: {{ global.coordinates.latitude }},
            lng: {{ global.coordinates.longitude }}
        },
        zoom: 15
    });
}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key={{ global.googleAPIKey }}&libraries=places&callback=loadMap"></script>
<script>
// Set up the autocomplete address field.
var autocomplete = new google.maps.places.Autocomplete(document.getElementById("autocomplete"), {
    componentRestrictions: {
        country: {{ global.countries }}
    }
});
// Adjust the map and set a marker when the user enters an address.
var marker;
autocomplete.addListener("place_changed", function() {
    var place = autocomplete.getPlace();
    var cityComponent = place.address_components.find(function(component) {
        return component.types.indexOf("locality") != -1;
    });
    // Make sure the location contains a city (and it's not just a province or country).
    if (!cityComponent) {
        clearLocation();
        return
    }
    $("#address").val($("#autocomplete").val());
    var city = cityComponent.long_name;
    var coordinates = place.geometry.location;
    $("#city").val(city);
    $("#latitude").val(coordinates.lat);
    $("#longitude").val(coordinates.lng);
    if (!marker) {
        marker = new google.maps.Marker({
            position: coordinates,
            map: map
        });
    } else {
        marker.setPosition(coordinates);
    }
    map.setCenter(coordinates);
});
$("#clear").on("click", clearLocation);
function clearLocation() {
    $("#autocomplete").val("");
    $("#address").val("");
    $("#city").val("");
    $("#latitude").val("");
    $("#longitude").val("");
    if (marker) {
        marker.setMap(null);
        marker = null;
    }
}
{% if global.coordinates.actual %}
    // If the user already had a location set, prefill the fields and add a marker.
    $("#autocomplete").val("{{ address }}");
    $("#address").val("{{ address }}");
    $("#city").val("{{ city }}");
    $("#latitude").val("{{ global.coordinates.latitude }}");
    $("#longitude").val("{{ global.coordinates.longitude }}");
    marker = new google.maps.Marker({
        position: map.center,
        map: map
    });
{% endif %}
</script>
{% endblock %}
